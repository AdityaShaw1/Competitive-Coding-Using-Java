import java.util.*;
class Solution {
    public int trap(int[] height) {
        Stack<Integer> stack = new Stack<Integer>();
        int n = height.length;
        int water = 0;
        for(int i=0;i<n;i++)
        {
            while(!stack.isEmpty() && height[i]>height[stack.peek()])
            {
                int top = stack.pop();
                if(stack.isEmpty())
                break;
                int distance =  i - stack.peek() - 1;
                int boundedHeight = Math.min(height[i],height[stack.peek()]) - height[top];
                water += distance * boundedHeight;

            }
            stack.push(i);
        }
            return water;
    }
}
